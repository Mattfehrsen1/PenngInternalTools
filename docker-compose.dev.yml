version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: cloneadvisor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/cloneadvisor
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - /app/venv310  # Don't override venv
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/cloneadvisor
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - /app/venv310
    depends_on:
      - postgres
      - redis
      - backend
    command: python worker.py
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Don't override node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data: 