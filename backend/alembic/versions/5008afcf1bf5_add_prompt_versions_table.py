"""add_prompt_versions_table

Revision ID: 5008afcf1bf5
Revises: 195ec1d9edbd
Create Date: 2025-06-11 18:38:03.592934

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5008afcf1bf5'
down_revision: Union[str, None] = '195ec1d9edbd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clone_quality',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('test_id', sa.String(), nullable=False),
    sa.Column('persona_type', sa.String(), nullable=False),
    sa.Column('prompt_version', sa.String(), nullable=False),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('response', sa.Text(), nullable=False),
    sa.Column('overall_score', sa.Integer(), nullable=False),
    sa.Column('accuracy_score', sa.Integer(), nullable=False),
    sa.Column('relevance_score', sa.Integer(), nullable=False),
    sa.Column('tone_score', sa.Integer(), nullable=False),
    sa.Column('citations_score', sa.Integer(), nullable=False),
    sa.Column('judge_feedback', sa.Text(), nullable=True),
    sa.Column('judge_reasoning', sa.Text(), nullable=True),
    sa.Column('test_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prompt_versions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('persona_id', sa.String(), nullable=True),
    sa.Column('layer', sa.Enum('SYSTEM', 'RAG', 'USER', name='promptlayer'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('author_id', sa.String(), nullable=False),
    sa.Column('commit_message', sa.String(), nullable=True),
    sa.Column('parent_version_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['parent_version_id'], ['prompt_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prompt_versions_author_id'), 'prompt_versions', ['author_id'], unique=False)
    op.create_index(op.f('ix_prompt_versions_is_active'), 'prompt_versions', ['is_active'], unique=False)
    op.create_index(op.f('ix_prompt_versions_layer'), 'prompt_versions', ['layer'], unique=False)
    op.create_index(op.f('ix_prompt_versions_name'), 'prompt_versions', ['name'], unique=False)
    op.create_index(op.f('ix_prompt_versions_persona_id'), 'prompt_versions', ['persona_id'], unique=False)
    op.alter_column('conversations', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('conversations', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_conversations_last_message', table_name='conversations')
    op.drop_index('ix_conversations_user_updated', table_name='conversations')
    op.create_index(op.f('ix_conversations_last_message_at'), 'conversations', ['last_message_at'], unique=False)
    op.alter_column('messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_messages_thread_created', table_name='messages')
    op.alter_column('personas', 'extra_metadata',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.drop_index('idx_personas_user_id', table_name='personas')
    op.create_index(op.f('ix_personas_user_id'), 'personas', ['user_id'], unique=False)
    op.alter_column('usage_logs', 'extra_metadata',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
    op.drop_index('idx_usage_logs_user_id', table_name='usage_logs')
    op.create_index(op.f('ix_usage_logs_user_id'), 'usage_logs', ['user_id'], unique=False)
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.drop_index(op.f('ix_usage_logs_user_id'), table_name='usage_logs')
    op.create_index('idx_usage_logs_user_id', 'usage_logs', ['user_id'], unique=False)
    op.alter_column('usage_logs', 'extra_metadata',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.drop_index(op.f('ix_personas_user_id'), table_name='personas')
    op.create_index('idx_personas_user_id', 'personas', ['user_id'], unique=False)
    op.alter_column('personas', 'extra_metadata',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.create_index('ix_messages_thread_created', 'messages', ['thread_id', 'created_at'], unique=False)
    op.alter_column('messages', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('ix_conversations_last_message_at'), table_name='conversations')
    op.create_index('ix_conversations_user_updated', 'conversations', ['user_id', 'updated_at'], unique=False)
    op.create_index('ix_conversations_last_message', 'conversations', ['last_message_at'], unique=False)
    op.alter_column('conversations', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('conversations', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('ix_prompt_versions_persona_id'), table_name='prompt_versions')
    op.drop_index(op.f('ix_prompt_versions_name'), table_name='prompt_versions')
    op.drop_index(op.f('ix_prompt_versions_layer'), table_name='prompt_versions')
    op.drop_index(op.f('ix_prompt_versions_is_active'), table_name='prompt_versions')
    op.drop_index(op.f('ix_prompt_versions_author_id'), table_name='prompt_versions')
    op.drop_table('prompt_versions')
    op.drop_table('clone_quality')
    # ### end Alembic commands ###
